//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//

// Defines about installed Pods
#import "Pods-Environment.h"
#define HAS_POD(podname) defined(COCOAPODS_POD_AVAILABLE_ ## podname)


// Unfortunately, you can't define preprocessor defines per scheme, so we're stuck
// doing it via configurations. These macros wrap that up nicely.
#define IS_DEBUG_CONFIGURATION(target) defined(CONFIGURATION_DEBUG_ ## target)
#define IS_TEST_CONFIGURATION(target) defined(CONFIGURATION_TEST_ ## target)
#define IS_ADHOC_CONFIGURATION(target) defined(CONFIGURATION_ADHOC_ ## target)
#define IS_PROFILE_CONFIGURATION(target) defined(CONFIGURATION_TEST_ ## target)
#define IS_DISTRIBUTION_CONFIGURATION() defined(CONFIGURATION_DISTRIBUTION)

#define IS_DEBUG_BUILD (IS_DEBUG_CONFIGURATION(STAGING) || IS_DEBUG_CONFIGURATION(PRODUCTION))
#define IS_TEST_BUILD (IS_TEST_CONFIGURATION(STAGING) || IS_TEST_CONFIGURATION(PRODUCTION))
#define IS_ADHOC_BUILD (IS_ADHOC_CONFIGURATION(STAGING) || IS_ADHOC_CONFIGURATION(PRODUCTION))
#define IS_PROFILE_BUILD (IS_PROFILE_BUILD(STAGING) || IS_PROFILE_BUILD(PRODUCTION))
#define IS_DISTRIBUTION_BUILD IS_DISTRIBUTION_CONFIGURATION()

#if IS_DEBUG_CONFIGURATION(STAGING) || IS_TEST_CONFIGURATION(STAGING) || IS_ADHOC_CONFIGURATION(STAGING) || IS_PROFILE_CONFIGURATION(STAGING)
#define TARGETING_STAGING
#else
#define TARGETING_PRODUCTION
#endif


// Pull in tgmath for seamless 32-/64-bit math functions.
// Due to a nasty clang situation right now (early 2014), we can't just use <tgmath.h>
// directly. See the note in the header.
#if HAS_POD(Sidecar)
#import <Sidecar/tgmath-stopgap.h>
#endif


#import <Availability.h>

#ifndef __IPHONE_7_0
#warning "This project uses features only available in iOS SDK 7.0 and later."
#endif


#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>

    #if HAS_POD(CocoaLumberjack)
        #import <CocoaLumberjack/DDLog.h>

        #ifdef DEBUG
            static const int ddLogLevel = LOG_LEVEL_VERBOSE;
        #else
            static const int ddLogLevel = LOG_LEVEL_WARN;
        #endif
    #endif

    #if HAS_POD(Sidecar)
        #import <Sidecar/CRLCategoriesAndUtils.h>
    #endif

    #if HAS_POD(libextobjc)
        // A lot of the extobjc stuff is a little crazy.
        // We're including it mainly for 2 things:
        // The Scope module which gives @weakify and @strongify, and
        // the KeyPathCoding module which gives @keypath and @collectionkeypath.
        // Use of any of the other modules is not recommended.
        #import <libextobjc/EXTScope.h>
        #import <libextobjc/EXTKeyPathCoding.h>
    #endif

    #if HAS_POD(Asterism)
        #import <Asterism/Asterism.h>
    #endif
#endif
